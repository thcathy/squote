---
- hosts: all
  become: false
  tasks:
    - name: create deployment directory
      file:
        path: "{{ deploy_folder }}/{{ namespace }}"
        state: directory
        mode: '0755'

    - name: create manifest yml
      template:
        src: "templates/squote-k8s.yml.j2"
        dest: "{{ deploy_folder }}/{{ namespace }}/squote-k8s.yml"

    - name: Install kubernetes Python library
      pip:
        name: kubernetes
        state: present

    - name: create k8s namespace
      k8s:
        api_version: v1
        kubeconfig: "{{ kubeconfig }}"
        definition:
          kind: Namespace
          metadata:
            name: "{{ namespace }}"

    - name: set k8s secret
      k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        kind: Secret
        name: "squote-secrets"
        namespace: "{{ namespace }}"
        inline:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "squote-secrets"
            namespace: "{{ namespace }}"
          data:
            JASYPT_ENCRYPTOR_PASSWORD: "{{ jasypt_encryptor_password | b64encode }}"
            FUTUOPEND_RSAKEY: "{{ futuopend_rsakey }}"

    - name: apply k8s manifest
      k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        namespace: "{{ namespace }}"
        src: "{{ deploy_folder }}/{{ namespace }}/squote-k8s.yml"

    - name: check new pod are running
      shell: kubectl get pods -l app=squote -n={{ namespace }} -o jsonpath='{range .items[*]}{.spec.containers[].image}{"\n"}{end}' | grep squote:{{ docker_image_tag }}
      register: pod_check
      until: pod_check.rc == 0
      retries: 10
      delay: 30

    - name: check server is responding
      uri:
        url: "https://{{ inventory_hostname }}/{{ url_base_path }}/rest/stock/indexquotes"
        return_content: yes
        status_code: 200
        body_format: json
      register: result
      until: result.status == 200
      retries: 5
      delay: 30
      tags: verify
    - name: check rest response
      fail:
        msg: "{{ result }}"
      when: result.json[0].stockCode is not defined
