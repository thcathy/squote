name: build-test-UAT-PROD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  apiserver_host: ${{ secrets.APISERVER_HOST }}
  jasypt_encryptor_password: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
  MONGO_HOST: 'localhost:27017'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Install local JAR with POM
      run: |
        mvn install:install-file \
          -Dfile=ib-tws-api/jarfile.jar \
          -DpomFile=ib-tws-api/pom.xml
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
    - name: Build with Maven
      run: mvn package
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        junit_files: "target/surefire-reports/**/*.xml"
    - name: JaCoCo Code Coverage Report
      uses: PavanMudigonda/jacoco-reporter@v4.6
      with:
        coverage_results_path: 'target/site/jacoco/jacoco.xml'
        coverage_report_name: 'Coverage'
        coverage_report_title: 'JaCoCo'
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Add Coverage Job Summary
      run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
    - name: Archive Production Artifact
      uses: actions/upload-artifact@master
      with:
        name: target
        path: target
  docker-uat-prod:
    runs-on: ubuntu-latest
    needs: [build-test]
    if: github.ref == 'refs/heads/master'
    env:
      ANSIBLE_HOST_KEY_CHECKING: 'False'
    steps:
    - name: Checkout 
      uses: actions/checkout@v3
    - name: Download Artifact
      uses: actions/download-artifact@master
      with:
        name: target
        path: target
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - name: Set docker image tag env variable
      run: |
        echo "DOCKER_IMAGE_TAG=${{ env.RELEASE_VERSION }}-${{ github.run_number }}" >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        file: docker/Dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/squote:latest,${{ secrets.DOCKERHUB_USERNAME }}/squote:${{ env.DOCKER_IMAGE_TAG }}
        platforms: linux/amd64,linux/arm64
    - name: Run ansible playbook to deploy and verify UAT
      uses: dawidd6/action-ansible-playbook@v2
      with:    
        playbook: ansible/squote/deploy-k8s.yml
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        vault_password: ${{ secrets.VAULT_PASSWORD }}
        options: |
          --inventory ansible/squote/inventory_k8s_uat
          --limit k8s_uat
          -e docker_image_tag=${{ env.DOCKER_IMAGE_TAG }}
          -e jasypt_encryptor_password=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
          -e apiserver_host="${{ secrets.APISERVER_HOST }}"
          -e futuopend_rsakey="${{ secrets.FUTUOPEND_RSAKEY }}"
    - name: Run ansible playbook to deploy and verify PROD
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: ansible/squote/deploy-k8s.yml
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        vault_password: ${{ secrets.VAULT_PASSWORD }}
        options: |
          --inventory ansible/squote/inventory_k8s_prod
          --limit k8s_prod
          -e docker_image_tag=${{ env.DOCKER_IMAGE_TAG }}
          -e jasypt_encryptor_password=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
          -e apiserver_host=${{ secrets.APISERVER_HOST }}
          -e futuopend_rsakey=${{ secrets.FUTUOPEND_RSAKEY }}
